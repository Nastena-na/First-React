{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Profile.js","utils/utils.js","utils/api.js","components/Card.js","components/PlacesList.js","images/close.svg","components/PopupWithForm.js","components/PopupNewMesto.js","components/PopupEditProfile.js","components/PopupBigImage.js","components/PopupAvatar.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Profile","props","currentUser","useContext","style","backgroundImage","avatar","onClick","onEditAvatar","name","about","onAddPlace","onEditProfile","config","url","headers","authorization","api","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","getResult","nameInput","aboutInput","body","JSON","stringify","nameNew","linkNew","link","id","isLiked","Card","isOwn","card","owner","_id","likes","some","i","onCardDelete","onLike","length","PlacesList","useState","cards","setCards","handleCardLike","likeCard","newCards","map","elem","catch","err","console","log","useEffect","getInitialCards","onCardClick","PopupWithForm","isOpen","close","onClose","title","noValidate","children","PopupNewMesto","inputRef","useRef","error1","setError1","error2","setError2","errorText1","setErrorText1","errorText2","setErrorText2","buttonIsDisabled","setButtonIsDisabled","onChange","evt","form","target","closest","checkValidity","validationMessage","open","onSubmit","preventDefault","type","required","placeholder","ref","disabled","PopupEditProfile","minLength","maxLength","PopupBigImage","PopupAvatar","error","setError","errorText","setErrorText","App","isEditAvatarPopupOpen","setisEditAvatarPopupClick","isEditProfilePopupOpen","setisEditProfilePopupClick","isAddPlacePopupOpen","setisAddPlacePopupClick","selectedCard","setselectedCard","setcurrentUser","closeAllPopups","getUserInfo","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.716368f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fad4f8a5.svg\";","import headerLogo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header root__section\">\r\n      <img src={headerLogo} alt=\"mesto logo\" className=\"logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext({}); //создаём новый объект контекста\r\n\r\nexport default CurrentUserContext;\r\n","import React from 'react';\r\n// import api from '../utils/api';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Profile(props) {\r\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\r\n\r\n  // Другой способ:\r\n  // const [userName, setUserName] = React.useState('');\r\n  // const [userDescription, setuserDescription] = React.useState('');\r\n  // const [userAvatar, setuserAvatar] = React.useState('');\r\n\r\n  // React.useEffect(() => {\r\n  //   api.getUserInfo().then((res) => {\r\n  //     setUserName(res.name);\r\n  //     setuserDescription(res.about);\r\n  //     setuserAvatar(res.avatar);\r\n  //   });\r\n  // });\r\n\r\n  return (\r\n    <div className=\"profile root__section\">\r\n      <div className=\"user-info\">\r\n        <div\r\n          className=\"user-info__photo\"\r\n          style={{ backgroundImage: `url('${currentUser.avatar}')` }}\r\n          onClick={props.onEditAvatar}\r\n        ></div>\r\n        <div className=\"user-info__data\">\r\n          <h1 className=\"user-info__name\">{currentUser.name}</h1>\r\n          <p className=\"user-info__job\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"button user-info__button\" onClick={props.onAddPlace}>\r\n          +\r\n        </button>\r\n        <button className=\"button edit__button\" onClick={props.onEditProfile}>\r\n          Edit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","const config = {\r\n  url: 'https://nomoreparties.co/cohort11',\r\n  headers: {\r\n    authorization: 'e7c47a46-a800-41a0-9207-658ce4c95ce5',\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nexport default config;\r\n","import config from './utils';\r\n\r\nclass Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  getResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  // Получение данных о пользователе с сервера\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then(this.getResult);\r\n  }\r\n\r\n  // Загрузка карточкек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then(this.getResult);\r\n  }\r\n\r\n  // Обновление данных профиля на сервере\r\n  patchUser(nameInput, aboutInput) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: nameInput,\r\n        about: aboutInput,\r\n      }),\r\n    }).then(this.getResult);\r\n  }\r\n\r\n  // Добавление новой карточки на сервер\r\n  postNewCard(nameNew, linkNew) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: nameNew,\r\n        link: linkNew,\r\n      }),\r\n    }).then(this.getResult);\r\n  }\r\n\r\n  // Удаление карточки с сервера\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then(this.getResult);\r\n  }\r\n\r\n  // Добавление/снятие \"лайка\"\r\n  likeCard(id, isLiked) {\r\n    // method -- это логический флаг(isLiked)\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: isLiked ? 'DELETE' : 'PUT',\r\n      headers: this._headers,\r\n    }).then(this.getResult);\r\n  }\r\n\r\n  // Обновление аватара\r\n  patchAvatar(link) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: link,\r\n      }),\r\n    }).then(this.getResult);\r\n  }\r\n}\r\n\r\nconst api = new Api(config);\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  function click() {\r\n    props.onClick(props.card); // ложим определённую карточку, по картинке которой кликнули,\r\n    //чтобы пробросить её в App в переменную {selectedCard} и от туда использовать её для PopupBigImage\r\n  }\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id); //id лайка = id пользователя\r\n\r\n  function handleLikeClick() {\r\n    props.onLike(props.card);\r\n  }\r\n\r\n  return (\r\n    <div className=\"place-card\">\r\n      <div\r\n        className=\"place-card__image\"\r\n        style={{ backgroundImage: `url(${props.card.link})` }}\r\n        onClick={click}\r\n      >\r\n        {isOwn && (\r\n          <button\r\n            className=\"place-card__delete-icon\"\r\n            onClick={handleDeleteClick}\r\n          ></button>\r\n        )}\r\n      </div>\r\n      <div className=\"place-card__description\">\r\n        <h3 className=\"place-card__name\">{props.card.name}</h3>\r\n        <div className=\"place-card__like-group\">\r\n          <button\r\n            className={`place-card__like-icon ${\r\n              isLiked && 'place-card__like-icon_liked'\r\n            }`}\r\n            onClick={handleLikeClick}\r\n          ></button>\r\n          <div className=\"place-card__like-number\">\r\n            {props.card.likes.length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction PlacesList(props) {\r\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getInitialCards().then((res) => {\r\n      setCards(res);\r\n    });\r\n  });\r\n\r\n  function handleCardLike(card) {\r\n    //проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .likeCard(card._id, isLiked)\r\n      .then((res) => {\r\n        // получили карточку, по которой лайкнули\r\n        const newCards = cards.map(\r\n          // Формируем новый массив на основе имеющегося стейта cards\r\n          (elem) => (elem._id === card._id ? res : elem)\r\n        ); // если id карточки из стейта = id карточки, на лайк которой нажали => подставляем в массив обновлённую карточку\r\n        // То есть если с карточкой ничего не изменилось-оставляем её, а если на ней поставили лайк или лайк убрали-поставим новую карточку в массив\r\n\r\n        setCards(newCards); // Обновляем стейт\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"places-list root__section\">\r\n      {cards.map((elem) => (\r\n        <Card\r\n          key={elem._id}\r\n          card={elem}\r\n          onClick={props.onCardClick}\r\n          onLike={handleCardLike}\r\n          onCardDelete={props.onCardDelete}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlacesList;\r\n","export default __webpack_public_path__ + \"static/media/close.8a65f75d.svg\";","import React from 'react';\r\nimport close from '../images/close.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  return (\r\n    <div\r\n      className={`popup ${props.name}__popup ${\r\n        props.isOpen && 'popup_is-opened'\r\n      }`}\r\n    >\r\n      <div className=\"popup__content\">\r\n        <img\r\n          src={close}\r\n          alt=\"\"\r\n          className=\"popup__close\"\r\n          onClick={props.onClose}\r\n        />\r\n        <h3 className=\"popup__title\">{props.title}</h3>\r\n        <form className=\"popup__form\" name={props.name} noValidate>\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction PopupNewMesto(props) {\r\n  const inputRef = React.useRef(); // чтобы получать значение поля ввода\r\n  const [error1, setError1] = React.useState(false); //чтобы добавлять елемент ошибки\r\n  const [error2, setError2] = React.useState(false); //чтобы добавлять елемент ошибки\r\n  const [errorText1, setErrorText1] = React.useState(''); //чтобы добавлять текст елементу ошибки\r\n  const [errorText2, setErrorText2] = React.useState(''); //чтобы добавлять текст елементу ошибки\r\n  const [buttonIsDisabled, setButtonIsDisabled] = React.useState(true); //чтобы делать кнопку неактивной\r\n\r\n  function handleSubmitForm(evt) {\r\n    // при сабмите формы с введённым значением инпута отрисуются карточки\r\n    evt.preventDefault();\r\n    setButtonIsDisabled(true);\r\n  }\r\n\r\n  function onChange(evt) {\r\n    const form = evt.target.closest('.popup__form');\r\n    if (!form.checkValidity()) {\r\n      if (evt.target.name === 'name') {\r\n        setError1(true);\r\n        setErrorText1(evt.target.validationMessage);\r\n        setButtonIsDisabled(true);\r\n      }\r\n      if (evt.target.name === 'link') {\r\n        setError2(true);\r\n        setErrorText2(evt.target.validationMessage);\r\n        setButtonIsDisabled(true);\r\n      }\r\n    }\r\n    if (form.checkValidity()) {\r\n      setError1(false);\r\n      setError2(false);\r\n      setErrorText1('');\r\n      setErrorText2('');\r\n      setButtonIsDisabled(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={props.open}\r\n      onClose={props.close}\r\n      name=\"new\"\r\n      title=\"Новое место\"\r\n      onSubmit={handleSubmitForm}\r\n      children={\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            className=\"popup__input popup__input_type_name\"\r\n            required\r\n            placeholder=\"Название\"\r\n            ref={inputRef}\r\n            onChange={onChange}\r\n          />\r\n          {error1 && (\r\n            <span id=\"name\" className=\"popup__error\">\r\n              {errorText1}\r\n            </span>\r\n          )}\r\n          <input\r\n            type=\"url\"\r\n            id=\"link\"\r\n            name=\"link\"\r\n            className=\"popup__input popup__input_type_link-url\"\r\n            required\r\n            placeholder=\"Ссылка на картинку\"\r\n            ref={inputRef}\r\n            onChange={onChange}\r\n          />\r\n          {error2 && (\r\n            <span id=\"link\" className=\"popup__error\">\r\n              {errorText2}\r\n            </span>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button popup__button popup__button_type_place\"\r\n            disabled={buttonIsDisabled}\r\n          >\r\n            +\r\n          </button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PopupNewMesto;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction PopupEditProfile(props) {\r\n  const inputRef = React.useRef(); // чтобы получать значение поля ввода\r\n  const [error1, setError1] = React.useState(false); //чтобы добавлять елемент ошибки\r\n  const [error2, setError2] = React.useState(false); //чтобы добавлять елемент ошибки\r\n  const [errorText1, setErrorText1] = React.useState(''); //чтобы добавлять текст елементу ошибки\r\n  const [errorText2, setErrorText2] = React.useState(''); //чтобы добавлять текст елементу ошибки\r\n  const [buttonIsDisabled, setButtonIsDisabled] = React.useState(true); //чтобы делать кнопку неактивной\r\n\r\n  function handleSubmitForm(evt) {\r\n    // при сабмите формы с введённым значением инпута отрисуются карточки\r\n    evt.preventDefault();\r\n    setButtonIsDisabled(true);\r\n  }\r\n\r\n  function onChange(evt) {\r\n    const form = evt.target.closest('.popup__form');\r\n    if (!form.checkValidity()) {\r\n      if (evt.target.name === 'user') {\r\n        setError1(true);\r\n        setErrorText1(evt.target.validationMessage);\r\n        setButtonIsDisabled(true);\r\n      }\r\n      if (evt.target.name === 'job') {\r\n        setError2(true);\r\n        setErrorText2(evt.target.validationMessage);\r\n        setButtonIsDisabled(true);\r\n      }\r\n    }\r\n    if (form.checkValidity()) {\r\n      setError1(false);\r\n      setError2(false);\r\n      setErrorText1('');\r\n      setErrorText2('');\r\n      setButtonIsDisabled(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={props.open}\r\n      onClose={props.close}\r\n      name=\"edit\"\r\n      title=\"Редактировать\"\r\n      onSubmit={handleSubmitForm}\r\n      children={\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            id=\"user\"\r\n            name=\"user\"\r\n            className=\"popup__input popup__input_type_name\"\r\n            required\r\n            placeholder=\"Имя\"\r\n            minLength=\"2\"\r\n            maxLength=\"30\"\r\n            ref={inputRef}\r\n            onChange={onChange}\r\n          />\r\n          {error1 && (\r\n            <span id=\"user\" className=\"popup__error\">\r\n              {errorText1}\r\n            </span>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            id=\"job\"\r\n            name=\"job\"\r\n            className=\"popup__input popup__input_type_link-url\"\r\n            required\r\n            placeholder=\"О себе\"\r\n            minLength=\"2\"\r\n            maxLength=\"30\"\r\n            ref={inputRef}\r\n            onChange={onChange}\r\n          />\r\n          {error2 && (\r\n            <span id=\"job\" className=\"popup__error\">\r\n              {errorText2}\r\n            </span>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button popup__button popup__button_type_user\"\r\n            disabled={buttonIsDisabled}\r\n          >\r\n            Сохранить\r\n          </button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PopupEditProfile;\r\n","import React from 'react';\r\nimport close from '../images/close.svg';\r\n\r\nfunction PopupBigImage(props) {\r\n  return (\r\n    <div\r\n      className={`popup bigImage__popup ${\r\n        props.card.link && 'popup_is-opened'\r\n      }`}\r\n    >\r\n      <div\r\n        className=\"popup__bg-image\"\r\n        style={{ backgroundImage: `url(${props.card.link})` }}\r\n      >\r\n        <img\r\n          src={close}\r\n          alt=\"\"\r\n          className=\"popup__close\"\r\n          onClick={props.close}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupBigImage;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction PopupAvatar(props) {\r\n  const inputRef = React.useRef(); // чтобы получать значение поля ввода\r\n  const [error, setError] = React.useState(false); //чтобы добавлять елемент ошибки\r\n  const [errorText, setErrorText] = React.useState(''); //чтобы добавлять текст елементу ошибки\r\n  const [buttonIsDisabled, setButtonIsDisabled] = React.useState(true); //чтобы делать кнопку неактивной\r\n\r\n  function handleSubmitForm(evt) {\r\n    // при сабмите формы с введённым значением инпута отрисуются карточки\r\n    evt.preventDefault();\r\n    setButtonIsDisabled(true);\r\n  }\r\n\r\n  function onChange(evt) {\r\n    const form = evt.target.closest('.popup__form');\r\n    if (!form.checkValidity()) {\r\n      setError(true);\r\n      setErrorText(evt.target.validationMessage);\r\n      setButtonIsDisabled(true);\r\n    }\r\n    if (form.checkValidity()) {\r\n      setError(false);\r\n      setErrorText('');\r\n      setButtonIsDisabled(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpen={props.open}\r\n      onClose={props.close}\r\n      name=\"avatar\"\r\n      title=\"Обновить аватар\"\r\n      onSubmit={handleSubmitForm}\r\n      children={\r\n        <>\r\n          <input\r\n            type=\"url\"\r\n            id=\"urlAvatar\"\r\n            name=\"urlAvatar\"\r\n            className=\"popup__input popup__input_type_name\"\r\n            required\r\n            placeholder=\"Ссылка на аватар\"\r\n            ref={inputRef}\r\n            onChange={onChange}\r\n          />\r\n          {error && (\r\n            <span id=\"urlAvatar\" className=\"popup__error\">\r\n              {errorText}\r\n            </span>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button popup__button popup__button_type_avatar\"\r\n            disabled={buttonIsDisabled}\r\n          >\r\n            Сохранить\r\n          </button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PopupAvatar;\r\n","import React from 'react';\nimport Header from './Header';\nimport Profile from './Profile';\nimport PlacesList from './PlacesList';\nimport PopupNewMesto from './PopupNewMesto';\nimport PopupEditProfile from './PopupEditProfile';\nimport PopupBigImage from './PopupBigImage';\nimport PopupAvatar from './PopupAvatar';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nimport '../index.css';\n\nfunction App() {\n  //задаём внутренние состояния переменных\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupClick] = React.useState(\n    false\n  ); //чтобы задавать CSS-класс popup_is-opened PopupAvatar\n\n  const [isEditProfilePopupOpen, setisEditProfilePopupClick] = React.useState(\n    false\n  ); //чтобы задавать CSS-класс popup_is-opened PopupProfile\n\n  const [isAddPlacePopupOpen, setisAddPlacePopupClick] = React.useState(false); //чтобы задавать CSS-класс popup_is-opened PopupNewPlace\n\n  const [selectedCard, setselectedCard] = React.useState({}); //чтобы получать определённую картинку карточки(в виде объекта), на которую нажали\n\n  const [currentUser, setcurrentUser] = React.useState({}); // для получения данных о пользователе(имя,о себе, аватар)\n\n  React.useEffect(() => {\n    // получаем от сервера данные о пользователе\n    api.getUserInfo().then((res) => {\n      setcurrentUser(res);\n    });\n  });\n\n  //меняем внутренние состояния переменных с false(без) на true(с popup_is-opened)-открываем попапы\n  function handleEditAvatarClick() {\n    setisEditAvatarPopupClick(true);\n  }\n\n  function handleEditProfileClick() {\n    setisEditProfilePopupClick(true);\n  }\n\n  function handleAddPlaceClick() {\n    setisAddPlacePopupClick(true);\n  }\n\n  // получаем карточку, на картинку которой нажали\n  function handleCardClick(card) {\n    setselectedCard(card);\n  }\n\n  //меняем внутренние состояния переменных на false(без popup_is-opened)-закрываем попапы\n  function closeAllPopups() {\n    setisEditAvatarPopupClick(false);\n    setisEditProfilePopupClick(false);\n    setisAddPlacePopupClick(false);\n    setselectedCard(false);\n  }\n\n  function handleCardDelete() {}\n\n  return (\n    //оборачиваем в контекст всё содержимое и устанавливаем значение \"currentUser\" контекста для провайдера\n\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header />\n        <Profile\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n        />\n        <PlacesList\n          onCardClick={handleCardClick}\n          onCardDelete={handleCardDelete}\n        />\n        <PopupNewMesto open={isAddPlacePopupOpen} close={closeAllPopups} />\n        <PopupEditProfile\n          open={isEditProfilePopupOpen}\n          close={closeAllPopups}\n        />\n        <PopupBigImage card={selectedCard} close={closeAllPopups} />\n        <PopupAvatar open={isEditAvatarPopupOpen} close={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}